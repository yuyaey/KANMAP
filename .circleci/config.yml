version: 2.1
executors:
  default_container:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          RAILS_ENV: test
          MYSQL_ROOT_HOST: 127.0.0.1
          MYSQL_USER: 'root'
          MYSQL_ROOT_PASSWORD: ''
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLER_VERSION: 1.17.3
      - image: circleci/mysql:8.0
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
    working_directory: ~/KANMAP

commands:
  install_bundler:
    description: Bundler install
    steps:
      - run: gem install bundler -v 1.17.3

jobs:
  fetch_source_code:
    executor:
      name: default_container
    steps:
      - checkout
      - save_cache:
          key: v2-KANMAP-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/KANMAP
  bundle_dependencies:
    executor:
      name: default_container
    steps:
      - restore_cache:
          key: v2-KANMAP-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
      
      - run:
          name: setup bundler
          command: |
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo rm /usr/local/bin/bundler
            sudo gem install bundler -v 1.17.3
  
      - run:
          name: Bundle Install Dependencies
          command: |
            bundle install

      - save_cache:
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  rspec:
      executor:
        name: default_container
      steps:
        - restore_cache:
            key: v2-KANMAP-{{ .Environment.CIRCLE_SHA1 }}
        - restore_cache:
            key: v2-dependencies-{{ checksum "Gemfile.lock" }}
            
        - run:
            name: Watting stand up database
            command: |
              dockerize -wait \
              tcp://127.0.0.1:3306 -timeout 120s

        # Database setup
        - run: mv ./config/database.yml.ci ./config/database.yml
        - install_bundler
        - run:
            name: Testing DB migration and seed
            command: |
              bundle exec rails db:create db:migrate db:seed db:drop
        # Align chrome-driver's version installed by webdriver
        - run:
            name: Update ChromeDriver Version
            command: |
              bundle exec rake webdrivers:chromedriver:update
        # run tests!
        - run:
            name: Run rspec
            command: |
              mkdir /tmp/test-results
              mkdir -p ~/rspec
              bundle exec rails db:create db:migrate
              TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
              bundle exec bin/rspec --format progress --color --format documentation

        # collect reports
        - store_test_results:
            path: /tmp/test-results
        - store_artifacts:
            path: /tmp/test-results
            destination: test-results
  deploy:
      executor:
        name: default_container
      steps:
        - checkout
        - setup_remote_docker: 
            docker_layer_caching: true
        - run: sudo apt-get update && sudo apt-get install python3-pip groff-base
        - run: sudo pip3 install awscli --ignore-installed six
        - restore_cache:
            key: v2-KANMAP-{{ .Environment.CIRCLE_SHA1 }}
        - restore_cache:
            key: v2-dependencies-{{ checksum "Gemfile.lock" }}
        - install_bundler
        
        - add_ssh_keys:
            fingerprints:
              - '93:8f:4d:f8:f0:3a:0b:3c:c5:63:b6:1b:3e:de:0a:fa'

        - run:
            name: Add ssh-agent
            command: |
              ssh-agent -s > ~/.ssh_agent_conf
              source ~/.ssh_agent_conf
              for _k in $(ls ${HOME}/.ssh/id_*); do
                ssh-add ${_k} || true
              done

        - deploy:
            name: Deploy via Capistrano
            command: |
              if [ "${CIRCLE_BRANCH}" != "master" ]; then
                exit 0
              fi
              bundle config --local path vendor/bundle
              .circleci/deploy.sh

workflows:
  build:
    jobs:
      - fetch_source_code
      - bundle_dependencies:
          requires:
            - fetch_source_code
      # - rspec:
      #     requires:
      #       - bundle_dependencies
      - deploy:
          requires:
            - bundle_dependencies