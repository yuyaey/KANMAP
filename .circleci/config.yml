version: 2.1
jobs:
  checkout_code:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers-legacy
    working_directory: ~/KANMAP
    steps:
      - checkout
      - save_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/KANMAP
#   test:
#     docker:
#       - image: circleci/ruby:2.6.3-node-browsers-legacy
#         environment:
#           RAILS_ENV: test
#           MYSQL_ROOT_HOST: 127.0.0.1
#           MYSQL_USER: 'root'
#           MYSQL_ROOT_PASSWORD: ''
#       - image: circleci/mysql:8.0
#         command: mysqld --default-authentication-plugin=mysql_native_password
#         environment:
#           MYSQL_DATABASE: KANMAP_test
#           MYSQL_ALLOW_EMPTY_PASSWORD: true
#           MYSQL_ROOT_HOST: '%'
#     working_directory: ~/KANMAP
#     steps:
#       - checkout
#       - restore_cache:
#           key: v2-KANMAP-{{ .Environment.CIRCLE_SHA1 }}
#       - restore_cache:
#           keys: 
#           - v2-dependencies-{{ checksum "Gemfile.lock" }}
#           - v2-dependencies-
#       - run:
#           name: install dependencies
#           command: |
#             bundle install --jobs=4 --retry=3 --path vendor/bundle
#       - save_cache:
#           paths:
#           - ./vendor/bundle
#           key: v2-dependencies-{{ checksum "Gemfile.lock" }}
#       - run:
#           name: Watting stand up database
#           command: |
#             dockerize -wait \
#             tcp://127.0.0.1:3306 -timeout 120s
#       # Database setup
#       - run: rm ./config/database.yml
#       - run: mv ./config/database.yml.ci ./config/database.yml
#       - run:
#             name: Prepare db
#             command: |
#               bundle exec rake db:create db:schema:load --trace
#       # Align chrome-driver's version installed by webdriver
#       - run:
#           name: Update ChromeDriver Version
#           command: |
#             bundle exec rake webdrivers:chromedriver:update
#       # run tests!
#       - run:
#           name: Run rspec
#           command: |
#             mkdir /tmp/test-results
#             mkdir -p ~/rspec
#             bundle exec rails db:create db:migrate
#             TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
#             bundle exec bin/rspec --format progress --color --format documentation
#       # collect reports
#       - store_test_results:
#           path: /tmp/test-results
#       - store_artifacts:
#           path: /tmp/test-results
#           destination: test-results

  deploy:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install aws
          command: |
            sudo pip install awscli
            aws --version
      - run:
          name: Install ecs-deploy
          command: |
            curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee -a /usr/bin/ecs-deploy
            sudo chmod +x /usr/bin/ecs-deploy
      - run:
          name: Install jq
          command: sudo apt-get install -y jq
      - run:
          name: "Log in to AWS ECR"
          command: eval $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: "Rails app Build & Push Docker Image"
          command: |
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/kanmap:latest -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/kanmap:$CIRCLE_SHA1 -f Dockerfile.prod --build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY .
            docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/kanmap:$CIRCLE_SHA1
      - run:
          name: "DB Migrate"
          command: |
            aws ecs run-task \
              --region ap-northeast-1 \
              --cluster kanmap-cluster \
              --task-definition kanmap-task \
              --overrides file://ecs/run_task_db_migrate.json
      - run:
          name: "Service deploy"
          environment:
          command: |
            ecs-deploy -c kanmap-cluster -n kanmap-service \
              -r ap-northeast-1 -t 1200 \
              -i $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/kanmap:$CIRCLE_SHA1
          no_output_timeout: 20m

workflows:
  version: 2.1
  test_and_deploy:
    jobs:
      - checkout_code
      # - test:
      #     requires:
      #       - checkout_code
      - deploy:
          requires:
            - checkout_code
          # filters:
          #   branches:
          #     only: master